// Code generated by MockGen. DO NOT EDIT.
// Source: localStorage.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLocalStorage is a mock of LocalStorage interface.
type MockLocalStorage struct {
	ctrl     *gomock.Controller
	recorder *MockLocalStorageMockRecorder
}

// MockLocalStorageMockRecorder is the mock recorder for MockLocalStorage.
type MockLocalStorageMockRecorder struct {
	mock *MockLocalStorage
}

// NewMockLocalStorage creates a new mock instance.
func NewMockLocalStorage(ctrl *gomock.Controller) *MockLocalStorage {
	mock := &MockLocalStorage{ctrl: ctrl}
	mock.recorder = &MockLocalStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocalStorage) EXPECT() *MockLocalStorageMockRecorder {
	return m.recorder
}

// GetLocalValue mocks base method.
func (m *MockLocalStorage) GetLocalValue(number1 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocalValue", number1)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetLocalValue indicates an expected call of GetLocalValue.
func (mr *MockLocalStorageMockRecorder) GetLocalValue(number1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocalValue", reflect.TypeOf((*MockLocalStorage)(nil).GetLocalValue), number1)
}
